using Photon.Pun;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerFollowCameraPun2 : MonoBehaviour
{
    [SerializeField] private float turnSpeed = 10.0f;   // ???]???x
    [SerializeField] public GameObject player;          // ?????????v???C???[
    [SerializeField] public float distance = 15.0f;    // ?????????v???C???[?????J??????????????
    [SerializeField] private Quaternion vRotation;      // ?J?????????????](???????????])
    [SerializeField] public Quaternion hRotation;      // ?J?????????????]
    [SerializeField] float lerp = 0.1f;
    [SerializeField] private ParticleSystem particle;
    public static float lastRotationY;

    void Start()
    {
        // ???]????????
        vRotation = Quaternion.Euler(15, lastRotationY, 0);         // ???????](X???????????????])???A15?x???????????]
        hRotation = Quaternion.identity;                // ???????](Y???????????????])???A?????]
        transform.rotation = hRotation * vRotation;     // ???I?I???J?????????]???A???????]???????????????]???????????]

        // ???u????????
        // player???u????????distance???????O???????????u????????????
        transform.position = player.transform.position - transform.rotation * Vector3.forward * distance;
    }


    private void OnDisable()
    {
        lastRotationY = transform.eulerAngles.y;
    }

    private void Update()
    {
        if(PlayerPun2.playerState == "dash")
        {
            particle.Play();
        }
    }
    void LateUpdate()
    {

        if (Cursor.visible == false)
        {
             // ???????]???X?V
             hRotation *= Quaternion.Euler(0, Input.GetAxis("Mouse X") * turnSpeed, 0);
            //?????????????]
            // vRotation *= Quaternion.Euler(Input.GetAxis("Mouse Y") * turnSpeed,0 ,0);
        }


        // ?J?????????](transform.rotation)???X?V
        // ???@1 : ???????]???????????????]???????????]????????
        
        transform.rotation = Quaternion.Lerp(this.transform.rotation,hRotation * vRotation,lerp);

        // ?J?????????u(transform.position)???X?V
        // player???u????????distance???????O???????????u????????????(???u??????)
        transform.position = player.transform.position + new Vector3(0, 1, 0) - transform.rotation * Vector3.forward * distance;

    }
}
